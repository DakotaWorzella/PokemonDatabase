@model PokemonDatabase.Models.TypeViewModel;
@{
    Layout = "_Layout";
}

<div class="typeTable">
    @if(User.IsInRole("Owner"))
    {
        <p>
            <a class="btn btn-primary" href="@Url.Action("AddType", "Owner")" role="button">Add Type</a>
        </p>
    }
    <table class="table">
        <tr>
            <th scope="col">Type</th>
            <th scope="col">Actions</th>
        </tr>
        @foreach(var item in Model.AllTypes)
        {
            <tr>
                <td>
                    @item.Name
                    @if(item.IsArchived == true)
                    {
                        @("(Archived)")
                    }
                </td>
                <td>
                    <a href="@(Url.Action("EditType", "Admin", new { id = item.Id }))">Edit</a>
                    @if(!(Model.AllPokemon.Exists(x => x.PrimaryType.Id == item.Id) || Model.AllPokemon.Exists(x => x.SecondaryType != null && x.SecondaryType.Id == item.Id)))
                    {
                        @('|')
                        @if(!item.IsArchived)
                        {
                            <a href="@(Url.Action("ArchiveType", "Admin", new { id = item.Id }))">Archive</a>
                        }
                        else
                        {
                            <a href="@(Url.Action("UnarchiveType", "Admin", new { id = item.Id }))">Unarchive</a>
                        }
                    }
                    @if(User.IsInRole("Owner"))
                    {
                        @('|')
                        <a href="@(Url.Action("DeleteType", "Owner", new { id = item.Id }))">Delete</a>
                    }
                </td>
            </tr>
        }
    </table>
</div>
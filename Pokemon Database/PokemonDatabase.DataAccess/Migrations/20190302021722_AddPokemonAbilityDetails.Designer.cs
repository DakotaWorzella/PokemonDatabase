// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokemonDatabase.DataAccess.Models;

namespace PokemonDatabase.DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190302021722_AddPokemonAbilityDetails")]
    partial class AddPokemonAbilityDetails
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PokemonDatabase.DataAccess.Models.Ability", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Abilities");
                });

            modelBuilder.Entity("PokemonDatabase.DataAccess.Models.BaseHappiness", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Happiness");

                    b.HasKey("ID");

                    b.ToTable("BaseHappiness");
                });

            modelBuilder.Entity("PokemonDatabase.DataAccess.Models.BaseStat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("Attack");

                    b.Property<short>("Defense");

                    b.Property<short>("Health");

                    b.Property<string>("PokemonID");

                    b.Property<short>("SpecialAttack");

                    b.Property<short>("SpecialDefense");

                    b.Property<short>("Speed");

                    b.Property<short>("StatTotal");

                    b.HasKey("ID");

                    b.HasIndex("PokemonID");

                    b.ToTable("BaseStats");
                });

            modelBuilder.Entity("PokemonDatabase.DataAccess.Models.CaptureRate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("CatchRate");

                    b.Property<decimal>("ChanceOfCapture");

                    b.HasKey("ID");

                    b.ToTable("CaptureRates");
                });

            modelBuilder.Entity("PokemonDatabase.DataAccess.Models.Classification", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Classifications");
                });

            modelBuilder.Entity("PokemonDatabase.DataAccess.Models.EggCycle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("CycleCount");

                    b.HasKey("ID");

                    b.ToTable("EggCycles");
                });

            modelBuilder.Entity("PokemonDatabase.DataAccess.Models.EggGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("EggGroups");
                });

            modelBuilder.Entity("PokemonDatabase.DataAccess.Models.EVYield", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("Attack");

                    b.Property<short>("Defense");

                    b.Property<short>("EVTotal");

                    b.Property<short>("Health");

                    b.Property<string>("PokemonID");

                    b.Property<short>("SpecialAttack");

                    b.Property<short>("SpecialDefense");

                    b.Property<short>("Speed");

                    b.HasKey("ID");

                    b.HasIndex("PokemonID");

                    b.ToTable("EVYields");
                });

            modelBuilder.Entity("PokemonDatabase.DataAccess.Models.ExperienceGrowth", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExpPointTotal");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("ExperienceGrowths");
                });

            modelBuilder.Entity("PokemonDatabase.DataAccess.Models.Form", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("PokemonDatabase.DataAccess.Models.GenderRatio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("FemaleRatio");

                    b.Property<double>("MaleRatio");

                    b.HasKey("ID");

                    b.ToTable("GenderRatios");
                });

            modelBuilder.Entity("PokemonDatabase.DataAccess.Models.Generation", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Abbreviation");

                    b.Property<string>("Games");

                    b.Property<string>("Region");

                    b.HasKey("ID");

                    b.ToTable("Generations");
                });

            modelBuilder.Entity("PokemonDatabase.DataAccess.Models.Pokemon", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BaseHappinessID");

                    b.Property<int>("CaptureRateID");

                    b.Property<int>("ClassificationID");

                    b.Property<int>("EggCycleID");

                    b.Property<int>("ExpYield");

                    b.Property<int>("ExperienceGrowthID");

                    b.Property<int>("GenderRatioID");

                    b.Property<string>("GenerationID");

                    b.Property<decimal>("Height");

                    b.Property<string>("Name");

                    b.Property<decimal>("Weight");

                    b.HasKey("ID");

                    b.HasIndex("BaseHappinessID");

                    b.HasIndex("CaptureRateID");

                    b.HasIndex("ClassificationID");

                    b.HasIndex("EggCycleID");

                    b.HasIndex("ExperienceGrowthID");

                    b.HasIndex("GenderRatioID");

                    b.HasIndex("GenerationID");

                    b.ToTable("Pokemon");
                });

            modelBuilder.Entity("PokemonDatabase.DataAccess.Models.PokemonAbilityDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HiddenAbilityID");

                    b.Property<string>("PokemonID");

                    b.Property<int>("PrimaryAbilityID");

                    b.Property<int?>("SecondaryAbilityID");

                    b.HasKey("ID");

                    b.HasIndex("HiddenAbilityID");

                    b.HasIndex("PokemonID");

                    b.HasIndex("PrimaryAbilityID");

                    b.HasIndex("SecondaryAbilityID");

                    b.ToTable("PokemonAbilityDetails");
                });

            modelBuilder.Entity("PokemonDatabase.DataAccess.Models.PokemonTypeDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PokemonID");

                    b.Property<int>("PrimaryTypeID");

                    b.Property<int?>("SecondaryTypeID");

                    b.HasKey("ID");

                    b.HasIndex("PokemonID");

                    b.HasIndex("PrimaryTypeID");

                    b.HasIndex("SecondaryTypeID");

                    b.ToTable("PokemonTypeDetails");
                });

            modelBuilder.Entity("PokemonDatabase.DataAccess.Models.Type", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("PokemonDatabase.DataAccess.Models.TypeChart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttackID");

                    b.Property<int?>("DefendID");

                    b.Property<decimal>("Effective");

                    b.HasKey("ID");

                    b.HasIndex("AttackID");

                    b.HasIndex("DefendID");

                    b.ToTable("TypeChart");
                });

            modelBuilder.Entity("PokemonDatabase.DataAccess.Models.BaseStat", b =>
                {
                    b.HasOne("PokemonDatabase.DataAccess.Models.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonID");
                });

            modelBuilder.Entity("PokemonDatabase.DataAccess.Models.EVYield", b =>
                {
                    b.HasOne("PokemonDatabase.DataAccess.Models.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonID");
                });

            modelBuilder.Entity("PokemonDatabase.DataAccess.Models.Pokemon", b =>
                {
                    b.HasOne("PokemonDatabase.DataAccess.Models.BaseHappiness", "BaseHappiness")
                        .WithMany()
                        .HasForeignKey("BaseHappinessID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PokemonDatabase.DataAccess.Models.CaptureRate", "CaptureRate")
                        .WithMany()
                        .HasForeignKey("CaptureRateID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PokemonDatabase.DataAccess.Models.Classification", "Classification")
                        .WithMany()
                        .HasForeignKey("ClassificationID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PokemonDatabase.DataAccess.Models.EggCycle", "EggCycle")
                        .WithMany()
                        .HasForeignKey("EggCycleID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PokemonDatabase.DataAccess.Models.ExperienceGrowth", "ExperienceGrowth")
                        .WithMany()
                        .HasForeignKey("ExperienceGrowthID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PokemonDatabase.DataAccess.Models.GenderRatio", "GenderRatio")
                        .WithMany()
                        .HasForeignKey("GenderRatioID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PokemonDatabase.DataAccess.Models.Generation", "Generation")
                        .WithMany()
                        .HasForeignKey("GenerationID");
                });

            modelBuilder.Entity("PokemonDatabase.DataAccess.Models.PokemonAbilityDetail", b =>
                {
                    b.HasOne("PokemonDatabase.DataAccess.Models.Ability", "HiddenAbility")
                        .WithMany()
                        .HasForeignKey("HiddenAbilityID");

                    b.HasOne("PokemonDatabase.DataAccess.Models.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonID");

                    b.HasOne("PokemonDatabase.DataAccess.Models.Ability", "PrimaryAbility")
                        .WithMany()
                        .HasForeignKey("PrimaryAbilityID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PokemonDatabase.DataAccess.Models.Ability", "SecondaryAbility")
                        .WithMany()
                        .HasForeignKey("SecondaryAbilityID");
                });

            modelBuilder.Entity("PokemonDatabase.DataAccess.Models.PokemonTypeDetail", b =>
                {
                    b.HasOne("PokemonDatabase.DataAccess.Models.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonID");

                    b.HasOne("PokemonDatabase.DataAccess.Models.Type", "PrimaryType")
                        .WithMany()
                        .HasForeignKey("PrimaryTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PokemonDatabase.DataAccess.Models.Type", "SecondaryType")
                        .WithMany()
                        .HasForeignKey("SecondaryTypeID");
                });

            modelBuilder.Entity("PokemonDatabase.DataAccess.Models.TypeChart", b =>
                {
                    b.HasOne("PokemonDatabase.DataAccess.Models.Type", "Attack")
                        .WithMany()
                        .HasForeignKey("AttackID");

                    b.HasOne("PokemonDatabase.DataAccess.Models.Type", "Defend")
                        .WithMany()
                        .HasForeignKey("DefendID");
                });
#pragma warning restore 612, 618
        }
    }
}

@model IEnumerable<Pokedex.DataAccess.Models.Comment>;
@{
    Layout = "_Layout";
}

@section styles
{
    <link href="/css/tabContent.css" rel="stylesheet" type="text/css" />
    <style>
        .tabcontent th {
            text-align: left !important;
        }
    </style>
}

@section scripts
{
    <script src="/js/tabContent.js"></script>
}

<div class="tab-list">
    <button class="tab active" onclick="openPage(event, 'incomplete')">Incompleted Comments</button>
    <button class="tab" onclick="openPage(event, 'completed')">Completed Comments</button>
</div>
<div class="tabcontent active" id="incomplete">
    @if(@Model.Where(x => !x.IsCompleted).ToList().Count() > 0)
    {
        <table class="table">
            <tr>
                <th class="col-md-9" scope="col">Comment</th>
                <th scope="col">Actions</th>
            </tr>
            @foreach(var item in Model.Where(x => !x.IsCompleted))
            {
                <tr>
                    <td>
                        @(@item.CommentType + " for ")
                        @if(@item.PokemonName != null)
                        {
                            @(@item.CommentedPage + " (")<a href="@Url.Action("Pokemon", "Home", new { Name = item.PokemonName.Replace(' ', '_').ToLower() })">@item.PokemonName</a>@(")")
                        }
                        else
                        {
                            @item.CommentedPage
                        }
                        @if(item.Commentor != null)
                        {
                            @(" by " + @item.Commentor.Username)
                        }
                        <br>
                        <br>
                        @item.Name
                    </td>
                    
                    <td>
                        <a class="btn btn-primary" href="@Url.Action("CompleteComment", "Owner", new { id = @item.Id })">Complete Comment</a>
                        <br>
                        <br>
                        <a class="btn btn-primary" href="@Url.Action("Comment", "Delete", new { id = @item.Id })">Remove Comment</a>
                    </td>
                </tr>
            }
        </table>
    }
    else
    {
        <div class="noUsers">There are no comments at all!</div>
    }
</div>
<div class="tabcontent" id="completed">
    @if(Model.Where(x => x.IsCompleted).ToList().Count() > 0)
    {
        <table class="table">
            <tr>
                <th class="col-md-9" scope="col">Comment</th>
                <th scope="col">Actions</th>
            </tr>
            @foreach(var item in Model.Where(x => x.IsCompleted))
            {
                <tr>
                    <td>
                        @(@item.CommentType + " for ")
                        @if(@item.PokemonName != null)
                        {
                            @(@item.CommentedPage + " (")<a href="@Url.Action("Pokemon", "Home", new { Name = item.PokemonName.Replace(' ', '_').ToLower() })">@item.PokemonName</a>@(")")
                        }
                        else
                        {
                            @item.CommentedPage
                        }
                        @if(item.Commentor != null)
                        {
                            @(" by " + @item.Commentor.Username)
                        }
                        <br>
                        <br>
                        @item.Name
                    </td>
                    
                    <td>
                        <a class="btn btn-primary" href="@Url.Action("UndoComment", "Owner", new { id = @item.Id })">Undo Completion</a>
                        <br>
                        <br>
                        <a class="btn btn-primary" href="@Url.Action("Comment", "Delete", new { id = @item.Id })">Remove Comment</a>
                    </td>
                </tr>
            }
        </table>
    }
    else
    {
        <div class="noUsers">There are no comments at all!</div>
    }
</div>
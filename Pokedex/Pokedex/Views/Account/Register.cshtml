@model Pokedex.Models.RegisterViewModel
@{
    Layout = "_Layout";
}

<h2>Sign Up</h2>

<div class="form-horizontal">

    @using (Html.BeginForm())
    {
        <div class="form-group">
            @Html.LabelFor(x => x.FirstName)
            @Html.EditorFor(x => x.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.FirstName)
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.LastName)
            @Html.EditorFor(x => x.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.LastName)
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Username)
            @Html.EditorFor(x => x.Username, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.Username)
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.EmailAddress)
            @Html.EditorFor(x => x.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.EmailAddress)
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Password)
            @Html.PasswordFor(x => x.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Password)
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.PasswordConfirm, "Confirm Password")
            @Html.PasswordFor(x => x.PasswordConfirm, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.PasswordConfirm)
        </div>

        @Html.ValidationSummary()

        <p>
            <button type="submit" class="btn btn-primary" role="button">Sign Up</button>
        </p>
    }
    
</div>
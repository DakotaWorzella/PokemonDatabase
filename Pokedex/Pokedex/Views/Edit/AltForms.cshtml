@using Pokedex.Models;
@model Pokedex.Models.DropdownViewModel;
@{
    Layout = "_Layout";
    bool everythingAdded;
}

@section styles
{
    <style>
        main {
            max-width: 1220px !important;
        }

        .grid-container > div {
            flex-basis: 30%;
        }
    </style>
}

<div class="generation"">
    <div class="grid-container">
        @foreach(var item in Model.AllPokemon.AllPokemon)
        {
            everythingAdded = Model.AllPokemon.AllTypings.Exists(x => x.PokemonId == item.Id) && Model.AllPokemon.AllAbilities.Exists(x => x.PokemonId == item.Id) && Model.AllPokemon.AllEggGroups.Exists(x => x.PokemonId == item.Id) && Model.AllPokemon.AllBaseStats.Exists(x => x.PokemonId == item.Id) && Model.AllPokemon.AllEVYields.Exists(x => x.PokemonId == item.Id);
            Model.Pokemon = item;
            <div class="@item.Name @(item.IsComplete ? "" : "incomplete")">
                @if(item.IsComplete)
                {
                    <a href="@Url.Action("Pokemon", "Home", new { Name = @item.Name.Substring(0, item.Name.LastIndexOf(" (")).Replace(": ", "_").Replace(' ', '_').ToLower()})">
                        <img class="pokemonListPicture" title="@item.Name.Replace('_', ' ')" src="@Url.Content(@Model.AppConfig.WebUrl + "/images/pokemon/" + @item.Id + ".png")"/>
                    </a>
                }
                else
                {
                    <img class="pokemonListPicture" title="@item.Name.Replace('_', ' ')" src="@Url.Content(@Model.AppConfig.WebUrl + "/images/pokemon/" + @item.Id + ".png")"/>
                }
                <div>
                    @if(item.IsComplete)
                    {
                        <a href="@Url.Action("Pokemon", "Home", new { Name = @item.Name.Replace(": ", "_").Replace(' ', '_').ToLower()})" class="pokemonName">@item.Name.Replace('_', ' ')</a>
                    }
                    else
                    {
                        <span>@('#')@item.Id @item.Name.Replace('_', ' ')</span>
                    }
                    <br>
                    @await Html.PartialAsync("_AdminPokemonDropdown", new AdminPokemonViewModel() { DropdownViewModel = Model, Pokemon = item })
                </div>
            </div>
        }
    </div>
</div>
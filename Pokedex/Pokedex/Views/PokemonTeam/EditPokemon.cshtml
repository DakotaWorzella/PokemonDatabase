@addTagHelper "*, Microsoft.AspNetCore.Mvc.TagHelpers"
@model Pokedex.Models.UpdateTeamPokemonViewModel
@{
    Layout = "_layout";
    ViewBag.Title = "Edit Pokemon";
}

@section scripts
{
    <script src="/js/updatePokemonTeamDetail.js"></script>
}

<h2>Update Pokemon</h2>

<div class="form-horizontal">

    @using (Html.BeginForm(FormMethod.Post, new { @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        
        @Html.ValidationSummary()

        @Html.HiddenFor(x => x.PokemonTeamDetail.Id);
        @Html.HiddenFor(x => x.PokemonTeamDetail.PokemonTeamEVId);
        @Html.HiddenFor(x => x.PokemonTeamDetail.PokemonTeamIVId);
        @Html.HiddenFor(x => x.GenerationId);

        <div class="form-group row">
            @Html.LabelFor(x => x.PokemonTeamDetail.PokemonId, "Pokemon", new { @class = "col-md-2" })
            @Html.DropDownListFor(x => x.PokemonTeamDetail.PokemonId, new SelectList(Model.AllPokemon, "Id", "Name"), "", new { @class = "form-control col-md-8" })
            @Html.ValidationMessageFor(x => x.PokemonTeamDetail.PokemonId)
        </div>

        <div class="form-group row">
            @Html.LabelFor(x => x.PokemonTeamDetail.Nickname, new { @class = "col-md-2" })
            @Html.EditorFor(x => x.PokemonTeamDetail.Nickname, new { htmlAttributes = new { @class = "form-control col-md-8" }})
            @Html.ValidationMessageFor(x => x.PokemonTeamDetail.Nickname)
        </div>

        <div class="form-group row">
            @Html.LabelFor(x => x.PokemonTeamDetail.Gender, new { @class = "col-md-2" })
            @Html.DropDownListFor(x => x.PokemonTeamDetail.Gender, new SelectList(Model.Genders), "", new { @class = "form-control col-md-8" })
            @Html.ValidationMessageFor(x => x.PokemonTeamDetail.Gender)
        </div>

        <div class="form-group row">
            @Html.LabelFor(x => x.PokemonTeamDetail.IsShiny, "Is Pokemon Shiny", new { @class = "col-md-2" })
            @Html.CheckBoxFor(x => x.PokemonTeamDetail.IsShiny, new { @class = "form-control col-md-8" })
            @Html.ValidationMessageFor(x => x.PokemonTeamDetail.IsShiny)
        </div>

        <div class="form-group row">
            @Html.LabelFor(x => x.PokemonTeamDetail.AbilityId, "Ability", new { @class = "col-md-2" })
            @Html.DropDownListFor(x => x.PokemonTeamDetail.AbilityId, new SelectList(Model.AllAbilities, "Id", "Name"), string.Empty, new { @class = "form-control col-md-8" })
            @Html.ValidationMessageFor(x => x.PokemonTeamDetail.AbilityId)
        </div>

        <div class="form-group row">
            @Html.LabelFor(x => x.PokemonTeamDetail.BattleItemId, "Held Item", new { @class = "col-md-2" })
            @Html.DropDownListFor(x => x.PokemonTeamDetail.BattleItemId, new SelectList(Model.AllBattleItems, "Id", "Name"), string.Empty, new { @class = "form-control col-md-8" })
            @Html.ValidationMessageFor(x => x.PokemonTeamDetail.BattleItemId)
        </div>

        <p>
            <button type="submit" class="btn btn-primary" role="button">Update</button>
        </p>
    }

</div>
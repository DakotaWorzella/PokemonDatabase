@model Pokedex.Models.CaptureCalculatorViewModel;
@{
    Layout = "_Layout";
    ViewBag.Title = "Capture Calculator";
}

@section styles
{
    <link href="/css/pageLookup.css" rel="stylesheet" type="text/css" />
    <style>
        .flexDiv {
            padding: 5px 0px;
        }
    </style>
}

@section scripts
{
    <script>
        $(function () {
            $('#healthVal').text($('.healthSlider').val() + '%');
            $('.healthSlider').val($('.healthSlider').val());
            $('#encounterLevelVal').text($('.encounterLevelSlider').val());
            $('.encounterLevelSlider').val($('.encounterLevelSlider').val());
            $('#userLevelVal').text($('.userLevelSlider').val());
            $('.userLevelSlider').val($('.userLevelSlider').val());
            checkPokeball()
            turnText = ''
            if (Number($('.turnSlider').val()) == 11)
            {
                turnText = '11+'
            }
            else
            {
                turnText = $('.turnSlider').val()
            }
            $('#turnVal').text(turnText);
            $('.turnSlider').val($('.turnSlider').val());
        });

        $('.healthSlider').on('input', function () {
            $('#healthVal').text($(this).val() + '%');
        });

        $('.encounterLevelSlider').on('input', function () {
            $('#encounterLevelVal').text($(this).val());
        });

        $('.userLevelSlider').on('input', function () {
            $('#userLevelVal').text($(this).val());
        });

        $('.turnSlider').on('input', function () {
            turnText = ''
            if (Number($(this).val()) == 11)
            {
                turnText = '11+'
            }
            else
            {
                turnText = $(this).val()
            }
            $('#turnVal').text(turnText);
        });

        $('#Pokeball').on('input', function () {
            checkPokeball();
        });

        $('.calcutatorButton').on('click', function() {
            $.ajax({
                url: '/get-capture-chance/',
                method: 'POST',
                data: { 'pokemonId': $('#Pokemon').val(), 'healthPercentage': $('.healthSlider').val() / 100, 'pokeballId': $('#Pokeball').val(), 'statusId': $('#Status').val(), 'turnCount': $('.turnSlider').val(), 'encounterLevel': $('.encounterLevelSlider').val(), 'userLevel': $('.userLevelSlider').val(), 'surfing': $('#Surfing').is(':checked'), 'fishing': $('#Fishing').is(':checked'), 'previouslyCaught': $('#PreviouslyCaught').is(':checked'), 'caveOrNight': $('#CaveOrNight').is(':checked'), 'sameGender': $("input[name='Gender']:checked").val() }
            })
                .done(function (data) {
                    $('.calculatedChance').text(data);
                })
                .fail(function () {
                    alert("Failed to grab technique!");
                });
        });

        var checkPokeball = function() {
            switch(Number($('#Pokeball').val())) {
                case 7:
                    $('.Surfing').css('display', 'block');
                    $('.Fishing').css('display', 'none');
                    $('#Fishing').prop('checked', false);
                    $('.PreviouslyCaught').css('display', 'none');
                    $('#PreviouslyCaught').prop('checked', false);
                    $('.CaveOrNight').css('display', 'none');
                    $('#CaveOrNight').prop('checked', false);
                    $('.SameGender').css('display', 'none');
                    $('#SameGender').prop('checked', false);
                    $('.encounterLevelBar').val(100);
                    $('.userLevelBar').css('display', 'none');
                    $('.userLevelBar').val(100);
                    $('.turnBar').css('display', 'none');
                    $('.turnBar').val(1);
                    break;
                case 8:
                    $('.Surfing').css('display', 'none');
                    $('#Surfing').prop('checked', false);
                    $('.Fishing').css('display', 'none');
                    $('#Fishing').prop('checked', false);
                    $('.PreviouslyCaught').css('display', 'none');
                    $('#PreviouslyCaught').prop('checked', false);
                    $('.CaveOrNight').css('display', 'none');
                    $('#CaveOrNight').prop('checked', false);
                    $('.SameGender').css('display', 'none');
                    $('#SameGender').prop('checked', false);
                    $('.encounterLevelBar').css('display', 'block');
                    $('.encounterLevelBar').val(100);
                    $('.userLevelBar').css('display', 'none');
                    $('.userLevelBar').val(100);
                    $('.turnBar').css('display', 'none');
                    $('.turnBar').val(1);
                    break;
                case 9:
                    $('.Surfing').css('display', 'none');
                    $('#Surfing').prop('checked', false);
                    $('.Fishing').css('display', 'none');
                    $('#Fishing').prop('checked', false);
                    $('.PreviouslyCaught').css('display', 'block');
                    $('.CaveOrNight').css('display', 'none');
                    $('#CaveOrNight').prop('checked', false);
                    $('.SameGender').css('display', 'none');
                    $('#SameGender').prop('checked', false);
                    $('.encounterLevelBar').val(100);
                    $('.userLevelBar').css('display', 'none');
                    $('.userLevelBar').val(100);
                    $('.turnBar').css('display', 'none');
                    $('.turnBar').val(1);
                    break;
                case 12:
                    $('.Surfing').css('display', 'none');
                    $('#Surfing').prop('checked', false);
                    $('.Fishing').css('display', 'none');
                    $('#Fishing').prop('checked', false);
                    $('.PreviouslyCaught').css('display', 'none');
                    $('#PreviouslyCaught').prop('checked', false);
                    $('.CaveOrNight').css('display', 'block');
                    $('.SameGender').css('display', 'none');
                    $('#SameGender').prop('checked', false);
                    $('.encounterLevelBar').val(100);
                    $('.userLevelBar').css('display', 'none');
                    $('.userLevelBar').val(100);
                    $('.turnBar').css('display', 'none');
                    $('.turnBar').val(1);
                    break;
                case 14:
                    $('.Surfing').css('display', 'none');
                    $('#Surfing').prop('checked', false);
                    $('.Fishing').css('display', 'none');
                    $('#Fishing').prop('checked', false);
                    $('.PreviouslyCaught').css('display', 'none');
                    $('#PreviouslyCaught').prop('checked', false);
                    $('.CaveOrNight').css('display', 'none');
                    $('#CaveOrNight').prop('checked', false);
                    $('.SameGender').css('display', 'none');
                    $('#SameGender').prop('checked', false);
                    $('.encounterLevelBar').css('display', 'none');
                    $('.encounterLevelBar').val(100);
                    $('.userLevelBar').css('display', 'none');
                    $('.userLevelBar').val(100);
                    $('.turnBar').css('display', 'block');
                    $('.turnBar').val(1);
                    break;
                case 21:
                    $('.Surfing').css('display', 'none');
                    $('#Surfing').prop('checked', false);
                    $('.Fishing').css('display', 'none');
                    $('#Fishing').prop('checked', false);
                    $('.PreviouslyCaught').css('display', 'none');
                    $('#PreviouslyCaught').prop('checked', false);
                    $('.CaveOrNight').css('display', 'none');
                    $('#CaveOrNight').prop('checked', false);
                    $('.SameGender').css('display', 'none');
                    $('#SameGender').prop('checked', false);
                    $('.encounterLevelBar').css('display', 'block');
                    $('.encounterLevelBar').val(100);
                    $('.userLevelBar').css('display', 'block');
                    $('.userLevelBar').val(100);
                    $('.turnBar').css('display', 'none');
                    $('.turnBar').val(1);
                    break;
                case 22:
                    $('.Surfing').css('display', 'none');
                    $('#Surfing').prop('checked', false);
                    $('.Fishing').css('display', 'none');
                    $('#Fishing').prop('checked', false);
                    $('.PreviouslyCaught').css('display', 'none');
                    $('#PreviouslyCaught').prop('checked', false);
                    $('.CaveOrNight').css('display', 'none');
                    $('#CaveOrNight').prop('checked', false);
                    $('.SameGender').css('display', 'block');
                    $('input#SameGender').prop('checked', true);
                    $('.encounterLevelBar').val(100);
                    $('.userLevelBar').css('display', 'none');
                    $('.userLevelBar').val(100);
                    $('.turnBar').css('display', 'none');
                    $('.turnBar').val(1);
                    break;
                case 23:
                    $('.Surfing').css('display', 'none');
                    $('#Surfing').prop('checked', false);
                    $('.Fishing').css('display', 'block');
                    $('.PreviouslyCaught').css('display', 'none');
                    $('#PreviouslyCaught').prop('checked', false);
                    $('.CaveOrNight').css('display', 'none');
                    $('#CaveOrNight').prop('checked', false);
                    $('.SameGender').css('display', 'none');
                    $('#SameGender').prop('checked', false);
                    $('.encounterLevelBar').val(100);
                    $('.userLevelBar').css('display', 'none');
                    $('.userLevelBar').val(100);
                    $('.turnBar').css('display', 'none');
                    $('.turnBar').val(1);
                    break;
                case 29:
                    $('.Surfing').css('display', 'none');
                    $('#Surfing').prop('checked', false);
                    $('.Fishing').css('display', 'none');
                    $('#Fishing').prop('checked', false);
                    $('.PreviouslyCaught').css('display', 'none');
                    $('#PreviouslyCaught').prop('checked', false);
                    $('.CaveOrNight').css('display', 'none');
                    $('#CaveOrNight').prop('checked', false);
                    $('.SameGender').css('display', 'none');
                    $('#SameGender').prop('checked', false);
                    $('.encounterLevelBar').css('display', 'none');
                    $('.encounterLevelBar').val(100);
                    $('.userLevelBar').css('display', 'none');
                    $('.userLevelBar').val(100);
                    $('.turnBar').css('display', 'block');
                    $('.turnBar').val(1);
                    break;
                default:
                    $('.Surfing').css('display', 'none');
                    $('#Surfing').prop('checked', false);
                    $('.Fishing').css('display', 'none');
                    $('#Fishing').prop('checked', false);
                    $('.PreviouslyCaught').css('display', 'none');
                    $('#PreviouslyCaught').prop('checked', false);
                    $('.CaveOrNight').css('display', 'none');
                    $('#CaveOrNight').prop('checked', false);
                    $('.SameGender').css('display', 'none');
                    $('#SameGender').prop('checked', false);
                    $('.encounterLevelBar').css('display', 'none');
                    $('.encounterLevelBar').val(100);
                    $('.userLevelBar').css('display', 'none');
                    $('.userLevelBar').val(100);
                    $('.turnBar').css('display', 'none');
                    $('.turnBar').val(1);
                    break;
            }
        }
    </script>
}

<div>
    <div class="captureCalculator">
        <div class="flexDiv">
            <div class="pokemonList col-md-6">
                @Html.Label("Pokemon", "Pokémon")
                @Html.DropDownList("Pokemon", new SelectList(@Model.AllPokemon, "Id", "Name"), new { @class = "form-control" })
            </div>
            <div class="healthBar col-md-6">
                <label for="Health">Health: <span id="healthVal"></span></label>
                <div>
                    <input class="healthSlider slider col-md-12" data-val-required="The Health field is required." id="Health" name="Health" type="range" min="1" max="100" value="100">
                </div>
            </div>
        </div>
        <div class="flexDiv">
            <div class="pokemonList col-md-6">
                @Html.Label("Pokeball", "Poké Ball")
                @Html.DropDownList("Pokeball", new SelectList(@Model.AllPokeballs, "Id", "Name"), new { @class = "form-control" })
            </div>
            <div class="pokemonList col-md-6">
                @Html.Label("Status")
                @Html.DropDownList("Status", new SelectList(@Model.AllStatuses, "Id", "Name"), "", new { @class = "form-control" })
            </div>
        </div>
        <div class="flexDiv">
            <div class="numberCaught col-md-6">
                    
            </div>
            <div class="encounterLevelBar col-md-6">
                <label for="EncounterLevel">Encounter Level: <span id="encounterLevelVal"></span></label>
                <div>
                    <input class="encounterLevelSlider slider col-md-12" data-val-required="The Level field is required." id="EncounterLevel" name="EncounterLevel" type="range" min="1" max="100" value="100">
                </div>
            </div>
            <div class="userLevelBar col-md-6">
                <label for="UserLevel">User Level: <span id="userLevelVal"></span></label>
                <div>
                    <input class="userLevelSlider slider col-md-12" data-val-required="The Level field is required." id="UserLevel" name="UserLevel" type="range" min="1" max="100" value="100">
                </div>
            </div>
            <div class="turnBar col-md-6">
                <label for="Turn">Turn: <span id="turnVal"></span></label>
                <div>
                    <input class="turnSlider slider col-md-12" data-val-required="The Turn field is required." id="Turn" name="Turn" type="range" min="1" max="11" value="1">
                </div>
            </div>
            <div class="col-md-6 Surfing">
                <input id="Surfing" type="checkbox" />
                <label for="Surfing"><span>Surfing</span></label>
            </div>
            <div class="col-md-6 Fishing">
                <input id="Fishing" type="checkbox" />
                <label for="Fishing"><span>Fishing</span></label>
            </div>
            <div class="col-md-6 PreviouslyCaught">
                <input id="PreviouslyCaught" type="checkbox" />
                <label for="PreviouslyCaught"><span>Previously Caught</span></label>
            </div>
            <div class="col-md-6 CaveOrNight">
                <input id="CaveOrNight" type="checkbox" />
                <label for="CaveOrNight"><span>In Cave Or Night</span></label>
            </div>
            <div class="col-md-6 SameGender">
                <span>Pokemon Genders</span>
                <br>
                <input type="radio" id="SameGender" name="Gender" value="true" />
                <label for="SameGender"><span>Same Gender and Same Species</span></label>
                <br>
                <input type="radio" id="DifferentGender" name="Gender" value="false" />
                <label for="DifferentGender"><span>Different Genders or Different Species</span></label>
            </div>
        </div>
        <br>
        <button class="btn btn-primary calcutatorButton">Calculate Chance</button>
        <br>
        <br>
        <h5 class="calculatedChance col-md-12"></h5>
    </div>
</div>
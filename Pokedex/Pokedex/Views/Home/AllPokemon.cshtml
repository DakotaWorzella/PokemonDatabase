@model Pokedex.Models.AllPokemonTypeViewModel;
@{
    Layout = "_Layout";
    ViewBag.Title = "Pokemon List";
}

@section styles
{
    <link href="/css/tabContent.css" rel="stylesheet" type="text/css" />
    <link href="/css/typeChart.css" rel="stylesheet" type="text/css" />
    <style>
        main {
            max-width: 1220px !important;
        }
    </style>
}

@section scripts
{
    <script src="/js/tabContent.js"></script>
}

@if(ViewData["Search"] == null)
{
    <p>
        @if(!@Model.SlowConnection)
        {
            <a class="btn btn-primary" href="@Url.Action("AllPokemon", "Home", new { slowConnection = true })">View As Table (Use For Slower Connections)</a>
        }
        else
        {
            <a class="btn btn-primary" href="@Url.Action("AllPokemon", "Home")">Retrun To Grid</a>
        }
    </p>
    <div class="tab-list">
        @foreach(var id in Model.AllPokemon.Select(x => x.Pokemon.Generation.Id).Distinct())
        {
            @if (id.IndexOf('-') == -1)
            {
                <button class="tab" onclick="openPage(event, 'Generation@(id)')">Generation @id</button>
            }
        }
    </div>
    @foreach(var gen in Model.AllPokemon.Select(x => x.Pokemon.Generation.Id).Distinct())
    {
        @if(@gen.IndexOf('-') == -1)
        {
            @if(!@Model.SlowConnection)
            {
                <div class="tabcontent generation" id="Generation@(gen)">
                    <div class="grid-container">
                        @foreach(var item in Model.AllPokemon.Where(x => (x.Pokemon.Generation.Id == @gen) || (x.Pokemon.Generation.Id.IndexOf('-') > -1 && x.Pokemon.Generation.Id.Substring(0, x.Pokemon.Generation.Id.IndexOf('-')) == @gen)))
                        {
                            <div class="@item.Pokemon.Name">
                                <a href="@Url.Action("Pokemon", "Home", new { Name = @item.Pokemon.Name.Replace(": ", "_").Replace(' ', '_').ToLower()})">
                                    <img class="pokemonListPicture" title="@item.Pokemon.Name.Replace('_', ' ')" src="@Url.Content(@Model.AppConfig.WebUrl + "/images/pokemon/" + @item.Pokemon.Id + ".png")"/>
                                </a>
                                <div>
                                    <span class="pokemonName">@('#')@item.Pokemon.Id.PadLeft(3, '0') @item.Pokemon.Name.Replace('_', ' ')</span>
                                    <div class="typing">
                                        <div class="pokemon-type type-icon type-@item.PrimaryType.Name.ToLower()">@item.PrimaryType.Name</div>
                                        @if(@item.SecondaryType != null)
                                        {
                                            <div class="pokemon-type type-icon type-@item.SecondaryType.Name.ToLower()">@item.SecondaryType.Name</div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="tabcontent generation" id="Generation@(gen)">
                    <table class="table">
                        <tr>
                            <th scope="col">Pokedex Number</th>
                            <th scope="col">Name</th>
                            <th scope="col">Typing</th>
                        </tr>
                        @foreach(var item in Model.AllPokemon.Where(x => (x.Pokemon.Generation.Id == @gen) || (x.Pokemon.Generation.Id.IndexOf('-') > -1 && x.Pokemon.Generation.Id.Substring(0, x.Pokemon.Generation.Id.IndexOf('-')) == @gen)))
                        {
                            <tr>
                                <td>@item.Pokemon.Id.PadLeft(3, '0')</td>
                                <td><a href="@Url.Action("Pokemon", "Home", new { Name = @item.Pokemon.Name.Replace(": ", "_").Replace(' ', '_').ToLower()})">@item.Pokemon.Name.Replace('_', ' ')</a></td>
                                <td>
                                    <div class="pokemon-type type-icon type-@item.PrimaryType.Name.ToLower()">@item.PrimaryType.Name</div>
                                    @if(@item.SecondaryType != null)
                                    {
                                        <div class="pokemon-type type-icon type-@item.SecondaryType.Name.ToLower()">@item.SecondaryType.Name</div>
                                    }
                                </td>
                            </tr>
                        }
                    </table>
                </div>
            }
        }
    }
}
else
{
    @if(!@Model.SlowConnection)
    {
        <p>
            <a class="btn btn-primary" href="@Url.Action("Search", "Home", new { search = ViewData["Search"], slowConnection = true })">View As Table Use For Slower Connections</a>
        </p>
        <div>
            <div class="grid-container">
                @foreach(var item in Model.AllPokemon)
                {
                    <div class="@item.Pokemon.Name">
                        <a href="@Url.Action("Pokemon", "Home", new { Name = @item.Pokemon.Name.Replace(": ", "_").Replace(' ', '_').ToLower()})">
                            <img class="pokemonListPicture" title="@item.Pokemon.Name.Replace('_', ' ')" src="@Url.Content(@Model.AppConfig.WebUrl + "/images/pokemon/" + @item.Pokemon.Id + ".png")"/>
                        </a>
                        <div>
                            <a class="pokemonName" href="@Url.Action("Pokemon", "Home", new { Name = @item.Pokemon.Name.Replace(": ", "_").Replace(' ', '_').ToLower()})">@('#')@item.Pokemon.Id.PadLeft(3, '0') @item.Pokemon.Name.Replace('_', ' ')</a>
                            <div class="typing">
                                <div class="pokemon-type type-icon type-@item.PrimaryType.Name.ToLower()">@item.PrimaryType.Name</div>
                                @if(@item.SecondaryType != null)
                                {
                                    <div class="pokemon-type type-icon type-@item.SecondaryType.Name.ToLower()">@item.SecondaryType.Name</div>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
    else
    {
        <p>
            <a class="btn btn-primary" href="@Url.Action("Search", "Home", new { search = ViewData["Search"] })">Retrun To Grid</a>
        </p>
        <div>
            <table class="table">
                <tr>
                    <th scope="col">Pokedex Number</th>
                    <th scope="col">Name</th>
                    <th scope="col">Typing</th>
                </tr>
                @foreach(var item in Model.AllPokemon)
                {
                    <tr>
                        <td>@item.Pokemon.Id.PadLeft(3, '0')</td>
                        <td><a href="@Url.Action("Pokemon", "Home", new { Name = @item.Pokemon.Name.Replace(": ", "_").Replace(' ', '_').ToLower()})">@item.Pokemon.Name.Replace('_', ' ')</a></td>
                        <td>
                            <div class="pokemon-type type-icon type-@item.PrimaryType.Name.ToLower()">@item.PrimaryType.Name</div>
                            @if(@item.SecondaryType != null)
                            {
                                <div class="pokemon-type type-icon type-@item.SecondaryType.Name.ToLower()">@item.SecondaryType.Name</div>
                            }
                        </td>
                    </tr>
                }
            </table>
        </div>
    }
}
@model IEnumerable<Pokedex.DataAccess.Models.PokemonTypeDetail>;
@{
    Layout = "_Layout";
}

@section styles
{
    <link href="/css/tabContent.css" rel="stylesheet" type="text/css" />
    <link href="/css/typeChart.css" rel="stylesheet" type="text/css" />
    <style>
        main {
            max-width: 1220px !important;
        }
    </style>
}

@section scripts
{
    <script src="/js/tabContent.js"></script>
}


@if(ViewData["Search"] == null)
{
    <div class="tab-list">
        @foreach(var id in Model.Select(x => x.Pokemon.Generation.Id).Distinct())
        {
            @if (id.IndexOf('-') == -1)
            {
                <button class="tab" onclick="openPage(event, 'Generation@(id)')">Generation @id</button>
            }
        }
    </div>
    @foreach(var gen in Model.Select(x => x.Pokemon.Generation.Id).Distinct())
    {
        @if(@gen.IndexOf('-') == -1)
        {
            <div class="tabcontent generation" id="Generation@(gen)">
                <div class="grid-container">
                    @foreach(var item in Model.Where(x => (x.Pokemon.Generation.Id == @gen) || (x.Pokemon.Generation.Id.IndexOf('-') > -1 && x.Pokemon.Generation.Id.Substring(0, x.Pokemon.Generation.Id.IndexOf('-')) == @gen)))
                    {
                        <div class="@item.Pokemon.Name">
                            <a href="@Url.Action("Pokemon", "Home", new { Name = @item.Pokemon.Name.Replace(": ", "_").Replace(' ', '_').ToLower()})">
                                <img class="pokemonListPicture" title="@item.Pokemon.Name.Replace('_', ' ')" src="@Url.Content("/images/pokemon/" + @item.Pokemon.Id + ".png")"/>
                            </a>
                            <div>
                                <span class="pokemonName">@('#')@item.Pokemon.Id @item.Pokemon.Name.Replace('_', ' ')</span>
                                <div class="typing">
                                    <div class="pokemon-type type-icon type-@item.PrimaryType.Name.ToLower()">@item.PrimaryType.Name</div>
                                    @if(@item.SecondaryType != null)
                                    {
                                        <div class="pokemon-type type-icon type-@item.SecondaryType.Name.ToLower()">@item.SecondaryType.Name</div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    }
}
else
{
    <div>
        <div class="grid-container">
            @foreach(var item in Model)
            {
                <div class="@item.Pokemon.Name">
                    <a href="@Url.Action("Pokemon", "Home", new { Name = @item.Pokemon.Name.Replace(": ", "_").Replace(' ', '_').ToLower()})">
                        <img class="pokemonListPicture" title="@item.Pokemon.Name.Replace('_', ' ')" src="@Url.Content("/images/pokemon/" + @item.Pokemon.Id + ".png")"/>
                    </a>
                    <div>
                        <span class="pokemonName">@('#')@item.Pokemon.Id @item.Pokemon.Name.Replace('_', ' ')</span>
                        <div class="typing">
                            <div class="pokemon-type type-icon type-@item.PrimaryType.Name.ToLower()">@item.PrimaryType.Name</div>
                            @if(@item.SecondaryType != null)
                            {
                                <div class="pokemon-type type-icon type-@item.SecondaryType.Name.ToLower()">@item.SecondaryType.Name</div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}
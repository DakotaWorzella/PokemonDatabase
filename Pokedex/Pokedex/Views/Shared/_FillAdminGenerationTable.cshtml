@model Pokedex.Models.AdminGenerationTableViewModel;
@{
    Pokedex.Models.AdminPokemonViewModel adminPokemon = new Pokedex.Models.AdminPokemonViewModel()
    {
        DropdownViewModel = Model.DropdownViewModel,
    };

    bool everythingAdded;
}

@foreach(var p in Model.PokemonList)
{
    adminPokemon.Pokemon = p;
    everythingAdded = Model.DropdownViewModel.AllPokemon.AllTypings.Exists(x => x.PokemonId == p.Id) && Model.DropdownViewModel.AllPokemon.AllAbilities.Exists(x => x.PokemonId == p.Id) && Model.DropdownViewModel.AllPokemon.AllEggGroups.Exists(x => x.PokemonId == p.Id) && Model.DropdownViewModel.AllPokemon.AllBaseStats.Exists(x => x.PokemonId == p.Id) && Model.DropdownViewModel.AllPokemon.AllEVYields.Exists(x => x.PokemonId == p.Id);
    <div class="@p.Name @(p.IsComplete ? "" : everythingAdded && p.ExpYield != 0 ? "review" : "incomplete")">
        @if(p.IsComplete)
        {
            <a href="@Url.Action("Pokemon", "Home", new { name = p.Name.Replace(": ", "_").Replace(' ', '_').ToLower() })">
                <img class="pokemonlistPicture" title="@p.Name.Replace('_', ' ')" src="@Url.Content(@Model.AppConfig.PokemonImageUrl + @p.Id + ".png")">
            </a>
        }
        else
        {
            <img class="pokemonlistPicture" title="@p.Name.Replace('_', ' ')" src="@Url.Content(@Model.AppConfig.PokemonImageUrl + @p.Id + ".png")">
        }
        <div class="description">
            @if(p.IsComplete)
            {
                <a class="pokemonName" href="@Url.Action("Pokemon", "Home", new { name = p.Name.Replace(": ", "_").Replace(' ', '_').ToLower() })">#@p.PokedexNumber.PadLeft(3, '0') @p.Name.Replace(' ', '_')</a>
            }
            else
            {
                <span class="pokemonName">#@p.PokedexNumber.PadLeft(3, '0') @p.Name.Replace(' ', '_')</span>
            }
            <br>
            @await Html.PartialAsync("_AdminPokemonDropdown", adminPokemon)
        </div>
    </div>
}
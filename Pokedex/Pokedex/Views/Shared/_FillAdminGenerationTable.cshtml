@model Pokedex.Models.AdminGenerationTableViewModel;

@foreach(var p in Model.PokemonList)
{
    <div class="@p.Name @(p.IsComplete ? "" : "incomplete")">
        @if(p.IsComplete)
        {
            <a href="@Url.Action("Pokemon", "Home", new { name = p.Name.Replace(": ", "_").Replace(' ', '_').ToLower() })">
                <img class="pokemonlistPicture" title="@p.Name.Replace('_', ' ')", src="@Url.Content(@Model.AppConfig.WebUrl + "/images/pokemon/" + @p.Id + ".png")">
            </a>
        }
        else
        {
            <img class="pokemonlistPicture" title="@p.Name.Replace('_', ' ')", src="@Url.Content(@Model.AppConfig.WebUrl + "/images/pokemon/" + @p.Id + ".png")">
        }
        <div class="description">
            @if(p.IsComplete)
            {
                <a class="pokemonName" href="@Url.Action("Pokemon", "Home", new { name = p.Name.Replace(": ", "_").Replace(' ', '_').ToLower() })">#@p.Id.PadLeft(3) @p.Name.Replace(' ', '_')</a>
            }
            else
            {
                <span class="pokemonName">#@p.Id.PadLeft(3) @p.Name.Replace(' ', '_')</span>
            }
            <br>
            <div class="btn-group">
                <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown">Actions</button>
                <ul class="dropdown-menu dropdown-menu-right">
                    @if(!p.IsComplete)
                    {
                        <span class="adminMenuTitle">Add To Pokemon</span>
                    }
                    @if(User.IsInRole("Owner") && !Model.DropdownViewModel.AllPokemon.AllTypings.Exists(x => x.PokemonId == p.Id))
                    {
                        <li><a class="dropdown-item" href="@(Url.Action("Typing", "Add", new { pokemonId = p.Id }))">Add Typing</a></li>
                    }
                    @if(User.IsInRole("Owner") && !Model.DropdownViewModel.AllPokemon.AllAbilities.Exists(x => x.PokemonId == p.Id))
                    {
                        <li><a class="dropdown-item" href="@(Url.Action("Abilities", "Add", new { pokemonId = p.Id }))">Add Abilities</a></li>
                    }
                    @if(User.IsInRole("Owner") && !Model.DropdownViewModel.AllPokemon.AllEggGroups.Exists(x => x.PokemonId == p.Id))
                    {
                        <li><a class="dropdown-item" href="@(Url.Action("EggGroups", "Add", new { pokemonId = p.Id }))">Add Egg Groups</a></li>
                    }
                    @if(User.IsInRole("Owner") && !Model.DropdownViewModel.AllPokemon.AllBaseStats.Exists(x => x.PokemonId == p.Id))
                    {
                        <li><a class="dropdown-item" href="@(Url.Action("BaseStats", "Add", new { pokemonId = p.Id }))">Add Base Stats</a></li>
                    }
                    @if(User.IsInRole("Owner") && !Model.DropdownViewModel.AllPokemon.AllEVYields.Exists(x => x.PokemonId == p.Id))
                    {
                        <li><a class="dropdown-item" href="@(Url.Action("EVYields", "Add", new { pokemonId = p.Id }))">Add EV Yields</a></li>
                    }
                    @if(!p.IsComplete)
                    {
                        <hr class="adminOptionSeparator">
                    }
                    <span class="adminMenuTitle">Edit Pokemon</span>
                    <li><a class="dropdown-item" href="@(Url.Action("Pokemon", "Edit", new { id = p.Id }))">Edit Pokemon</a></li>
                    @if(p.Id.Contains('-'))
                    {
                        <li><a class="dropdown-item" href="@(Url.Action("AltFormsForm", "Edit", new { pokemonId = p.Id }))">Edit Form</a></li>
                    }
                    @if(Model.DropdownViewModel.AllPokemon.AllTypings.Exists(x => x.PokemonId == p.Id))
                    {
                        <li><a class="dropdown-item" href="@(Url.Action("Typing", "Edit", new { pokemonId = p.Id }))">Edit Typing</a></li>
                    }
                    @if(Model.DropdownViewModel.AllPokemon.AllAbilities.Exists(x => x.PokemonId == p.Id))
                    {
                        <li><a class="dropdown-item" href="@(Url.Action("Abilities", "Edit", new { pokemonId = p.Id }))">Edit Abilities</a></li>
                    }
                    @if(Model.DropdownViewModel.AllPokemon.AllEggGroups.Exists(x => x.PokemonId == p.Id) && !p.Id.Contains('-'))
                    {
                        <li><a class="dropdown-item" href="@(Url.Action("EggGroups", "Edit", new { pokemonId = p.Id }))">Edit Egg Groups</a></li>
                    }
                    @if(Model.DropdownViewModel.AllPokemon.AllBaseStats.Exists(x => x.PokemonId == p.Id))
                    {
                        <li><a class="dropdown-item" href="@(Url.Action("BaseStats", "Edit", new { pokemonId = p.Id }))">Edit Base Stats</a></li>
                    }
                    @if(Model.DropdownViewModel.AllPokemon.AllEVYields.Exists(x => x.PokemonId == p.Id) && !p.Id.Contains('-'))
                    {
                        <li><a class="dropdown-item" href="@(Url.Action("EVYields", "Edit", new { pokemonId = p.Id }))">Edit EV Yields</a></li>
                    }
                    @if(p.IsComplete)
                    {
                        @if(!p.Id.Contains('-') || !Model.DropdownViewModel.AllPokemon.AllEvolutions.Exists(x => x.EvolutionPokemonId == p.Id))
                        {
                            <hr class="adminOptionSeparator">
                            <span class="adminMenuTitle">Add Relations</span>
                        }
                        @if(!Model.DropdownViewModel.AllPokemon.AllEvolutions.Exists(x => x.EvolutionPokemonId == p.Id))
                        {
                            <li><a class="dropdown-item" href="@(Url.Action("Evolution", "Add", new { pokemonId = p.Id }))">Add Pre-Evolution</a></li>
                        }
                        @if(!p.Id.Contains('-'))
                        {
                            <li><a class="dropdown-item" href="@(Url.Action("AltForm", "Add", new { pokemonId = p.Id }))">Add Alternate Form</a></li>
                        }
                        @if(Model.DropdownViewModel.AllPokemon.AllEvolutions.Exists(x => x.EvolutionPokemonId == p.Id) || (Model.DropdownViewModel.AllPokemon.AllAltForms.Exists(x => x.OriginalPokemonId == p.Id) && !p.Id.Contains('-')))
                        {
                            <hr class="adminOptionSeparator">
                            <span class="adminMenuTitle">Edit Relations</span>
                        }
                        @if(Model.DropdownViewModel.AllPokemon.AllEvolutions.Exists(x => x.EvolutionPokemonId == p.Id))
                        {
                            <li><a class="dropdown-item" href="@(Url.Action("Evolution", "Edit", new { pokemonId = p.Id }))">Edit Pre-Evolution</a></li>
                        }
                        @if(Model.DropdownViewModel.AllPokemon.AllAltForms.Exists(x => x.OriginalPokemonId == p.Id) && !p.Id.Contains('-'))
                        {
                            <li><a class="dropdown-item" href="@(Url.Action("AltForms", "Edit", new { pokemonId = p.Id }))">Edit Alternate Forms</a></li>
                        }
                        @if(!Model.DropdownViewModel.AllPokemon.AllLegendaryDetails.Exists(x => x.PokemonId == p.Id) && !p.Id.Contains('-'))
                        {
                            <hr class="adminOptionSeparator">
                            <span class="adminMenuTitle">Other</span>
                            <li><a class="dropdown-item" href="@(Url.Action("PokemonLegendaryDetails", "Add", new { pokemonId = p.Id }))">Set As Legendary</a></li>
                        }
                    }
                </ul>
            </div>
        </div>
    </div>
}
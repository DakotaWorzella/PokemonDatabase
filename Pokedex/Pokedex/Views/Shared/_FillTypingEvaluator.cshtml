@model Pokedex.Models.TypingEvaluatorViewModel;
@using Pokedex.DataAccess.Models;
@{
    List<PokemonTypeDetail> typing = Model.AllPokemonWithTypes;
}

@for(var i = 0; i < typing.Count(); i++)
{
    <div class="shadowed @typing[i].Pokemon.Name">
        <a href=@Url.Action("Pokemon", "Home", new { name = typing[i].Pokemon.Name.Replace(": ", "_").Replace(' ', '_').ToLower() })>
            <img class="pokemonListPicture" title="@typing[i].Pokemon.Name" src=@string.Concat(Model.AppConfig.WebUrl, Model.AppConfig.PokemonImageUrl, typing[i].PokemonId, ".png")>
        </a>
        <div>
            <a class="pokemonName" href="@Url.Action("Pokemon", "Home", new { name = Model.AllPokemon[i].Name.Replace(": ", "_").Replace(' ', '_').ToLower() })">@('#')@Model.AllPokemon[i].PokedexNumber.ToString().PadLeft(3, '0') @Model.AllPokemon[i].Name</a>
        </div>
    </div>
}